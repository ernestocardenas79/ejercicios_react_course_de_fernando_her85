{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,EAAcE,GACdC,EAAc,OAMd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAjBc,SAACN,GACxBF,EAAcE,EAAEO,OAAOF,Y,uBCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAUH,GAF/C,+DAICI,MAAMF,GAJP,cAIZG,EAJY,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZxB,kBAgBXM,GAhBW,4CAAH,sDCERO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAKgB,IAAKN,IAC7B,2BAAIA,KCFKO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAY,IAAD,EAEVb,mBAAS,CAC/BoB,KAAK,GACLa,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAepC,OARAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAAGH,EAAS,CAClBf,KAAKkB,EACLL,SAAS,SAElB,CAACpB,IAEGqB,EDZwBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACTD,UEeVkB,EA7Bc,WAAM,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,oCACI,6CACA,kBAAC,EAAD,CACIA,cARM,SAACU,GACfV,EAAc,CAACU,GAAF,mBAAYiC,QASrB,6BACA,4BAEQA,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACIA,SAAUA,EACV2B,IAAK3B,UClBjC8B,IAASC,OACJ,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f34944b8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n       setInputValue(e.target.value); \n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(inputValue);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export  const getGifs = async( category)=>{\n\n      const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=wh5pIEiyGdY9LbuXuSDOu28aMRTrxIMZ`;\n\n      const resp = await fetch(url);\n\n\n      const {data} =  await resp.json();\n      const gifs = data.map(img=>{\n          return {\n              id: img.id,\n              title: img.title,\n              url: img.images?.downsized_medium.url\n          }\n      })\n\n      return gifs;\n  };","import React from 'react'\n\nexport const GiftGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url} alt={title} />\n    <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GiftGridItem } from './GiftGridItem'\n\nexport const GiftGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>     \n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}  \n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => \n                    <GiftGridItem  \n                        key={ img.id}\n                    { ...img }/>)\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport {getGifs} from '../helpers/getGifts'\n\nexport const useFetchGifs = (category)=>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs =>setState({\n                data:imgs,\n                loading: false\n            }))\n    }, [category]);\n\n    return state;\n}\n","import React, {useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GiftGrid } from './GiftGrid';\n\nexport const GiftExpertApp = ()=> {\n\n    const [categories, setCategories] = useState(['One Punch',]);\n\n    const handleAdd = (value) =>{\n        setCategories([value, ...categories ])\n    }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>   \n            <AddCategory \n                setCategories={handleAdd }\n                /> \n            <hr/>\n            <ol>\n                {\n                    categories.map(category=>(\n                        <GiftGrid \n                            category={category} \n                            key={category}\n                          />\n                    ))\n                }\n            </ol>  \n        </>\n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\nimport GiftExpertApp from './components/GiftExpertApp';\n\nReactDOM.render(\n     <GiftExpertApp />,\n     document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}